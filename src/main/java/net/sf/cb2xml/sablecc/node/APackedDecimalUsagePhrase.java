/* This file was generated by SableCC (http://www.sablecc.org/). */

package net.sf.cb2xml.sablecc.node;

import net.sf.cb2xml.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class APackedDecimalUsagePhrase extends PUsagePhrase
{
    private TPackedDecimal _packedDecimal_;

    public APackedDecimalUsagePhrase()
    {
        // Constructor
    }

    public APackedDecimalUsagePhrase(
        @SuppressWarnings("hiding") TPackedDecimal _packedDecimal_)
    {
        // Constructor
        setPackedDecimal(_packedDecimal_);

    }

    @Override
    public Object clone()
    {
        return new APackedDecimalUsagePhrase(
            cloneNode(this._packedDecimal_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPackedDecimalUsagePhrase(this);
    }

    public TPackedDecimal getPackedDecimal()
    {
        return this._packedDecimal_;
    }

    public void setPackedDecimal(TPackedDecimal node)
    {
        if(this._packedDecimal_ != null)
        {
            this._packedDecimal_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._packedDecimal_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._packedDecimal_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._packedDecimal_ == child)
        {
            this._packedDecimal_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._packedDecimal_ == oldChild)
        {
            setPackedDecimal((TPackedDecimal) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
